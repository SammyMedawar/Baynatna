@model Baynatna.ViewModels.PostDetailsViewModel
@{
    ViewData["Title"] = Model.Title;
    var canVote = Context.Session.GetInt32("UserId") != null && !Model.IsOwner;
    var selectedAction = Context.Request.Query["action"].ToString();
}
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<link rel="stylesheet" href="~/css/common.css" />
<div class="header-padding mt-4">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <div class="d-flex align-items-center position-relative" style="min-height:2.5rem;">
            <a href="@Url.Action("Index", "Post")" class="btn btn-link back-btn-abs" style="position:absolute;left:-10px;top:50%;transform:translateY(-50%);color:#000;"><span style="font-size:1.5rem">&#8592;</span></a>
            <h2 class="mb-0" style="margin-left:2.5rem;">@Model.Title <span class="text-muted small ms-3">@Model.CreatedAt.ToString("g")</span></h2>
        </div>
        @if (Model.IsOwner)
        {
            <button class="btn btn-link text-danger ms-2" data-bs-toggle="modal" data-bs-target="#deleteModal" title="Delete Post">
                <span style="font-size:1.5rem" class="bi bi-trash">üóëÔ∏è</span>
            </button>
        }
    </div>
    @if (!string.IsNullOrWhiteSpace(Model.TranslatedTitle))
    {
        <div class="mb-2">
            <div class="fw-bold">Translation</div>
            <div>@Model.TranslatedTitle</div>
        </div>
    }
    <div class="mb-2">
        <div>@Model.Body</div>
    </div>
    @if (!string.IsNullOrWhiteSpace(Model.TranslatedBody))
    {
        <div class="mb-2">
            <div class="fw-bold">Translation</div>
            <div>@Model.TranslatedBody</div>
        </div>
    }
    @if (!string.IsNullOrWhiteSpace(Model.Tag))
    {
        <div class="mb-2">
            <span class="post-card-tag">@Model.Tag</span>
        </div>
    }
    <div class="mt-4">
        <div class="d-flex align-items-center mb-3" style="gap:1.5rem;">
            <div class="d-inline-flex align-items-center" style="gap:0.5rem;">
                <button type="button" class="btn btn-success btn-lg d-inline-flex align-items-center@(Model.UserVote==true?" vote-selected":"")" disabled><span>üëç</span><span class="vote-count">@Model.Upvotes</span></button>
                <button type="button" class="btn btn-danger btn-lg d-inline-flex align-items-center@(Model.UserVote==false?" vote-selected down":"")" disabled><span>üëé</span><span class="vote-count">@Model.Downvotes</span></button>
                @if (Model.UserVote == null && Context.Session.GetInt32("UserId") != null && !Model.IsOwner)
                {
                    <span class="text-muted small ms-2">Vote below with your comment</span>
                }
                @if (Model.UserVote != null)
                {
                    <span class="ms-2 fw-bold text-success" style="@(Model.UserVote==true?"color:#059669;":"color:#dc2626;")">You @((Model.UserVote == true) ? "upvoted" : "downvoted")</span>
                }
            </div>
        </div>
        <h4>Comments</h4>
        @if (Model.Comments.Count == 0)
        {
            <div class="text-muted">No comments yet.</div>
        }
        else
        {
            <div class="list-group mb-3">
                @foreach (var comment in Model.Comments)
                {
                    <div class="list-group-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="fw-bold">@("#" + comment.Id)</span>
                                <span class="text-muted small ms-2">@comment.CreatedAt.ToString("g")</span>
                            </div>
                            <div>
                                <span class="me-2">üëç <span id="up-@comment.Id">@comment.Upvotes</span></span>
                                <span class="me-2">üëé <span id="down-@comment.Id">@comment.Downvotes</span></span>
                                @if (comment.CanVote)
                                {
                                    <button class="btn btn-success btn-sm me-1" onclick="voteComment(@comment.Id, true)">üëç</button>
                                    <button class="btn btn-danger btn-sm" onclick="voteComment(@comment.Id, false)">üëé</button>
                                }
                                @if (comment.CanDelete)
                                {
                                    <form asp-action="DeleteComment" asp-controller="Post" method="post" style="display:inline;">
                                        <input type="hidden" name="id" value="@comment.Id" />
                                        <input type="hidden" name="postId" value="@Model.Id" />
                                        <button type="submit" class="btn btn-link text-danger" title="Delete Comment">üóëÔ∏è</button>
                                    </form>
                                }
                            </div>
                        </div>
                        <div class="mt-2">@comment.Body</div>
                        @if (!string.IsNullOrWhiteSpace(comment.TranslatedBody))
                        {
                            <div class="mt-1"><span class="fw-bold">Translation</span>: @comment.TranslatedBody</div>
                        }
                    </div>
                }
            </div>
        }
        <a id="add-comment"></a>
        @if (Context.Session.GetInt32("UserId") != null && !Model.IsOwner)
        {
            <h5>Add a Comment</h5>
            <form asp-action="AddComment" asp-controller="Post" method="post" id="addCommentForm">
                <input type="hidden" name="PostId" value="@Model.Id" />
                <input type="hidden" id="VoteAction" name="VoteAction" value="" />
                <div class="mb-2">
                    <textarea name="Body" class="form-control" required placeholder="Write your comment..." minlength="1"></textarea>
                    <div class="invalid-feedback">Please enter a comment.</div>
                </div>
                <div class="mb-2">
                    <label for="TranslatedBody" class="form-label">Translation (optional)</label>
                    <textarea name="TranslatedBody" class="form-control"></textarea>
                </div>
                <div class="mb-3">
                    <label class="form-label">Vote (required)</label>
                    <div class="d-flex gap-2">
                        <button type="button" id="vote-up-btn" class="btn btn-outline-success btn-lg flex-grow-1 vote-btn" data-vote="upvote">
                            <span>üëç Upvote</span>
                        </button>
                        <button type="button" id="vote-down-btn" class="btn btn-outline-danger btn-lg flex-grow-1 vote-btn" data-vote="downvote">
                            <span>üëé Downvote</span>
                        </button>
                    </div>
                    <div id="vote-error" class="text-danger mt-2" style="display:none;">Please select upvote or downvote.</div>
                </div>
                <button type="submit" class="btn btn-primary">Add Comment</button>
            </form>
        }
        else if (Context.Session.GetInt32("UserId") == null)
        {
            <div class="alert alert-info mt-3">You must be logged in to comment.</div>
        }
    </div>
</div>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
<style>
.vote-btn.active {
    border: 3px solid #000 !important;
}
</style>
<script>
    function voteComment(commentId, isUpvote) {
        $.post('@Url.Action("VoteComment", "Post")', { commentId: commentId, isUpvote: isUpvote })
            .done(function(res) {
                if (res.success) {
                    location.reload();
                } else {
                    alert(res.error || 'An error occurred.');
                }
            })
            .fail(function() {
                alert('An error occurred.');
            });
    }
    $(function() {
        // Handle vote button clicks
        $('.vote-btn').on('click', function() {
            // Remove active class from all buttons
            $('.vote-btn').removeClass('active');
            // Add active class to clicked button
            $(this).addClass('active');
        });

        // Form validation and submission
        $('#addCommentForm').on('submit', function(e) {
            e.preventDefault();
            let isValid = true;
            
            // Check comment
            const comment = $('textarea[name="Body"]').val().trim();
            if (!comment) {
                $('textarea[name="Body"]').addClass('is-invalid');
                isValid = false;
            } else {
                $('textarea[name="Body"]').removeClass('is-invalid');
            }
            
            // Check if any vote button is active
            const activeButton = $('.vote-btn.active');
            if (activeButton.length === 0) {
                $('#vote-error').show();
                isValid = false;
            } else {
                $('#vote-error').hide();
                // Set the vote action based on active button
                $('#VoteAction').val(activeButton.data('vote'));
            }
            
            if (isValid) {
                this.submit();
            }
        });

        // Clear validation on input
        $('textarea[name="Body"]').on('input', function() {
            if ($(this).val().trim()) {
                $(this).removeClass('is-invalid');
            }
        });

        // Scroll to comment form if anchor or action param
        if (window.location.hash === '#add-comment' || '@selectedAction' !== '') {
            var el = document.getElementById('add-comment');
            if (el) el.scrollIntoView({ behavior: 'smooth' });
        }
    });
</script>
<!-- Delete Confirmation Modal -->
@if (Model.IsOwner)
{
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Post</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this post? This action cannot be undone.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form asp-action="Delete" asp-controller="Post" method="post" style="display:inline;">
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
